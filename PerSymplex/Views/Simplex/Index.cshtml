@model PerSymplex.Models.HeaderSimplex

@{
    ViewBag.Title = "PerSymplex";
    Layout = "~/Views/Simplex/_LayoutSimplex.cshtml";
}


@using (Html.BeginForm("Index", "Simplex", FormMethod.Post))
{

    if (Model != null)
    {
    <div class="row inicio-simplex">
        <div class="col-sm-offset-4 col-sm-2 col-xs-6">
            @Html.LabelFor(model => model.NVar)
            @if (Model.NVar > 0)
            {
                @Html.EditorFor(model => model.NVar, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number", min = "1", @readonly = "readonly", datatoggle = "tooltip", title = "Bloqueado para edição" } })
            }
            else
            {
                @Html.EditorFor(model => model.NVar, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number", min = "1" } })
            }
        </div>
        <div class="col-sm-2 col-xs-6">
            @Html.LabelFor(model => model.NRest)
            @if (Model.NRest > 0)
            {
                @Html.EditorFor(model => model.NRest, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number", min = "1", @readonly = "readonly", datatoggle = "tooltip", title = "Bloqueado para edição" } })
            }
            else
            {
                @Html.EditorFor(model => model.NRest, new { htmlAttributes = new { @class = "form-control", required = "required", type = "number", min = "1" } })
            }
        </div>

    </div>
        if (Model.NRest > 0 & Model.NRest > 0)
        {
            <div class="container">
                <div class="row maximizar">
                    <div class="col-xs-12">
                        @Html.LabelFor(model => model.Operacao)
                        @Html.EnumDropDownListFor(model => model.Operacao)
                        @Html.ValidationMessageFor(model => model.Operacao)
                             
                            <h5>Função Objetivo</h5>
                            <ul class="funcao">
                                @for (int i = 0; i < Model.NVar; i++)
                                {
                                    <li>
                                        @if (i == 0)
                                        {
                                            @Html.EditorFor(model => model.FO[i], new { htmlAttributes = new { style = "width:60px; margin:0px 5px;", required = "required", type = "number", step = "any" } }) @("X" + (i + 1))
                                        }
                                        else if (i < Model.NVar)
                                        {
                                            @("+")@Html.EditorFor(model => model.FO[i], new { htmlAttributes = new { style = "width:60px; margin:0px 5px;", required = "required", type = "number" } }) @("X" + (i + 1))
                                        }
                                        else
                                        {
                                            @Html.EditorFor(model => model.FO[i], new { htmlAttributes = new { style = "width:60px; margin:0px 5px;", required = "required", type = "number" }}) @("X" + (i + 1))
                                        }
                                    </li>
                                }
                            </ul>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-xs-12">
                        <h5>Restrições</h5>
                        @for (int i = 0; i < Model.NRest; i++)
                        {
                            <div class="restricoes">
                            @for (int j = 0; j < (Model.NVar + 1); j++)
                            {

                                @Html.TextBox("MatrixA" + i, null, new { style = "width:60px", required = "required", type = "number", @class = "input-valor" })

                                if (j < Model.NVar - 1)
                                {
                                    
                                        @("X" + (j + 1) + " + ")
                                    
                                }
                                else if (j == Model.NVar - 1)
                                {
                                    
                                        @("X" + (j + 1) + " <= ")
                                    
                                }
                            }
                            </div>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.TipoSolucao)
                        @Html.EnumDropDownListFor(model => model.TipoSolucao)
                        @Html.ValidationMessageFor(model => model.TipoSolucao)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.GerarPDF)
                        @Html.EnumDropDownListFor(model => model.GerarPDF)
                        @Html.ValidationMessageFor(model => model.GerarPDF)
                    </div>
                </div>
            </div>
            
        }
    }
    <div class="row calcular">
        <div class="col-xs-12">
            <input class="btn exibir-calculos" type="submit" value="Confirmar" />
        </div>
    </div>
}